name: Build and Deploy

on:
  pull_request:
    branches:
      - main

jobs:
#   build_image:
#     runs-on: ubuntu-latest

#     steps:
#     - name: Checkout code
#       uses: actions/checkout@v2
#     - name: Setup `packer`
#       uses: hashicorp/setup-packer@main
#       with:
#         packer_version: 1.10.1

#     - name: Setup env variable
#       run: |
#             cd packer
#             echo '${{ secrets.IAM_KEY }}' | base64 --decode | jq > dev-img-0b1250fc5338.json

#     - name: Create zip file
#       run: |
#         zip -r webappzip.zip ./config \
#         ./migrations \
#         ./models \
#         ./packer \
#         ./src \
#         ./package-lock.json \
#         ./package.json \
#         ./server.js
#         ls -al

#     - name: Run `packer init`
#       id: initial
#       run: |
#           cd packer    
#           packer init ./centosdemo.pkr.hcl

#     - name: Run `packer validate`
#       id: validate
#       run: |
#           cd packer
#           packer validate ./centosdemo.pkr.hcl

#     - name: Run Packer
#       run: |
#         cd packer
#         packer build ${{ vars.PACKER_VARS }} .

  build_instance:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Setup google cloud 
      uses: 'google-github-actions/auth@v2' 
      with:
        credentials_json: '${{ secrets.GCP_SA_KEY }}'
        
    - name: Print active account
      run: gcloud config get-value account

    - name: Create Instance Template
      run: |
        echo '${{ vars.STARTUP_SCRIPT }}' > startup-script.sh

        json_data=$(echo '${{vars.TEMPLATE_CONFIG}}' | jq -r '.')
        machine_type=$(echo "${json_data}" | jq -r '.machineType')
        disk_type=$(echo "${json_data}" | jq -r '.diskType')
        disk_size=$(echo "${json_data}" | jq -r '.diskSize')
        image=$(echo "${json_data}" | jq -r '.image')
        subnet=$(echo "${json_data}" | jq -r '.subnet')
        metadata=$(echo "${json_data}" | jq -r '.metadata')
        service_account=$(echo "${json_data}" | jq -r '.serviceAccount')
        kms_key=$(echo "${json_data}" | jq -r '.kmsKey')

        gcloud compute instance-templates create csye6225-vm-template \
            --machine-type $machine_type \
            --boot-disk-size $disk_size \
            --boot-disk-type $disk_type \
            --image $image \
            --network projects/vast-math-414413/global/networks/my-vpc \
            --subnet $subnet \
            --tags=webapp-firewall \
            --metadata=$metadata \
            --service-account=$service_account \
            --scopes=https://www.googleapis.com/auth/cloud-platform \
            --metadata-from-file=startup-script=startup-script.sh \
            --boot-disk-kms-key=$kms_key 
            
    - name: 'Update Instance Group'
      run: |
        json_data=$(echo '${{vars.TEMPLATE_CONFIG}}' | jq -r '.')
        region=$(echo "${json_data}" | jq -r '.region')
        gcloud compute instance-groups managed rolling-action start-update webapp-group-manager-0 \
        --version template=csye6225-vm-template \
        --region=$region
    - name: 'Check Update Status'
      run: |
        json_data=$(echo '${{vars.TEMPLATE_CONFIG}}' | jq -r '.')
        region=$(echo "${json_data}" | jq -r '.region')
        gcloud compute instance-groups managed wait-until csye6225-vm-igm \
        --version-target-reached \
        --region=$region



            